// ui.js
// DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
const productsContainer = document.getElementById('products');
const searchInput = document.getElementById('search-input');
const categoryButtons = document.querySelectorAll('.tag-btn');
const cartBtn = document.getElementById('cart-btn');
const cartModal = document.getElementById('cart-modal');
const productModal = document.getElementById('product-modal');
const cartItems = document.getElementById('cart-items');
const phoneInput = document.getElementById('phone');
const commentInput = document.getElementById('comment-input');
const sendOrderBtn = document.getElementById('send-order');
const successMessage = document.getElementById('success-message');
const yearSpan = document.getElementById('year');
let renderProductsTimeout;

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ–¥–∞
if (yearSpan) {
  yearSpan.textContent = new Date().getFullYear();
}

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤
// –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è renderProducts —Å debounce
async function renderProducts() {
  // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç
  if (renderProductsTimeout) {
    clearTimeout(renderProductsTimeout);
  }
  
  // –ó–∞–¥–µ—Ä–∂–∫–∞ 300ms –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
  renderProductsTimeout = setTimeout(async () => {
    try {
      const res = await fetch('/api/products');
      
      if (!res.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã');
      }
      
      const PRODUCTS = await res.json();
      const query = (searchInput?.value || '').toLowerCase();

      const filtered = PRODUCTS.filter(p => {
        const available = p.available !== false;
        const categoryMatch = window.currentCategory === '–≤—Å–µ' || p.category === window.currentCategory;
        const searchMatch = query === '' ||
          p.title.toLowerCase().includes(query) ||
          p.description.toLowerCase().includes(query);
        
        return available && categoryMatch && searchMatch;
      });

      if (!productsContainer) {
        return;
      }

      productsContainer.innerHTML = '';

      if (filtered.length === 0) {
        productsContainer.innerHTML = `
          <div class="empty">
            <div class="text-6xl">üîç</div>
            <h3>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
          </div>
        `;
        return;
      }

      filtered.forEach((product) => {
        const card = document.createElement('div');
        card.className = 'product-card';
        card.innerHTML = `
          <div class="product-content">
            <h3 class="product-title">${product.title}</h3>
            <div class="product-image">
              <img src="${product.images[0]?.url?.trim() || '/assets/placeholder.png'}" alt="${product.title}" />
              ${product.tag ? `<div class="product-badge" data-tag="${product.tag.toLowerCase()}">${product.tag}</div>` : ''}
            </div>
            <div class="product-footer">
              <div class="product-price">${formatPrice(product.price)}</div>
              <div class="product-actions">
                <button class="btn-details" data-id="${product.id}">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
                <button class="btn-cart" data-id="${product.id}">–í –∫–æ—Ä–∑–∏–Ω—É</button>
              </div>
            </div>
          </div>
        `;
        productsContainer.appendChild(card);
      });
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
      document.querySelectorAll('.btn-details').forEach(button => {
        button.addEventListener('click', (event) => {
          const productId = parseInt(event.target.dataset.id);
          const product = PRODUCTS.find(p => p.id === productId);
          if (product) {
            openProductModal(product);
          }
        });
      });

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–í –∫–æ—Ä–∑–∏–Ω—É"
      document.querySelectorAll('.btn-cart').forEach(button => {
        button.addEventListener('click', (event) => {
          const productId = parseInt(event.target.dataset.id);
          const product = PRODUCTS.find(p => p.id === productId);
          if (product) {
            addToCart(product);
            updateCartCount();
          }
        });
      });
      
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', err);
      if (productsContainer) {
        productsContainer.innerHTML = `
          <div class="empty">
            <div class="text-6xl">‚ö†Ô∏è</div>
            <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
            <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</p>
          </div>
        `;
      }
    }
  }, 300); // 300ms –∑–∞–¥–µ—Ä–∂–∫–∞
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–æ–≤–∞—Ä–∞
function openProductModal(product) {
  document.getElementById('product-title').textContent = product.title;
  document.getElementById('product-description').textContent = product.description;
  document.getElementById('product-price').textContent = formatPrice(product.price);
  document.getElementById('product-main-image').src = product.images[0].url.trim();

  const thumbnails = document.getElementById('thumbnails');
  thumbnails.innerHTML = '';
  product.images.forEach(img => {
    const thumb = document.createElement('img');
    thumb.src = img.url.trim();
    thumb.alt = img.alt;
    thumb.className = 'thumbnail';
    if (img.url === product.images[0].url) thumb.classList.add('active');

    thumb.addEventListener('click', () => {
      document.getElementById('product-main-image').src = img.url.trim();
      document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
      thumb.classList.add('active');
    });

    thumbnails.appendChild(thumb);
  });

  window.currentProduct = product;
  productModal.classList.add('open');
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ—Ä–∑–∏–Ω—ã
function openCartModal() {
  if (cartItems) {
    const cart = getCart();
    if (cart.length === 0) {
      cartItems.innerHTML = '<div class="empty">–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>';
    } else {
      cartItems.innerHTML = '';
      let total = 0;
      cart.forEach(item => {
        const row = document.createElement('div');
        row.className = 'cart-item';
        row.innerHTML = `
          <img src="${item.product.images[0].url.trim()}" alt="" />
          <div class="cart-item-info">
            <div class="cart-item-title">${item.product.title}</div>
            <div class="cart-item-price">${formatPrice(item.product.price)}</div>
            <div class="cart-quantity">
              <button class="qty-minus" data-id="${item.product.id}">‚àí</button>
              <span>${item.qty}</span>
              <button class="qty-plus" data-id="${item.product.id}">+</button>
            </div>
          </div>
          <div class="cart-item-total">${formatPrice(item.product.price * item.qty)}</div>
        `;
        cartItems.appendChild(row);
        total += item.product.price * item.qty;
      });

      const totalRow = document.createElement('div');
      totalRow.className = 'total-row';
      totalRow.innerHTML = `<span>–ò—Ç–æ–≥–æ:</span><span>${formatPrice(total)}</span>`;
      cartItems.appendChild(totalRow);

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
      document.querySelectorAll('.qty-minus').forEach(btn => {
        btn.addEventListener('click', () => {
          const id = parseInt(btn.dataset.id);
          updateQuantity(id, -1);
          openCartModal();
        });
      });

      document.querySelectorAll('.qty-plus').forEach(btn => {
        btn.addEventListener('click', () => {
          const id = parseInt(btn.dataset.id);
          updateQuantity(id, 1);
          openCartModal();
        });
      });
    }
  }
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ jQuery –∏ maskedinput –¥–æ—Å—Ç—É–ø–Ω—ã, –∏ —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (typeof $ !== 'undefined' && $.fn.mask && phoneInput) {
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –ª—é–±—É—é —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –º–∞—Å–∫—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    // –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏—è—Ö –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    $(phoneInput).unmask();
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∞—Å–∫—É
    $(phoneInput).mask("+7 (999) 999-99-99", { placeholder: "+7 (___) ___-__-__" });
    console.log("–ú–∞—Å–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫ #phone-input");
  } else {
    console.warn("jQuery, maskedinput –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç #phone-input –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ú–∞—Å–∫–∞ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞.");
    // –û—Å—Ç–∞–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ input –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
    // (–µ—Å–ª–∏ –º–∞—Å–∫–∞ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞)
    if (phoneInput) {
       // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
       phoneInput.removeEventListener('input', sanitizePhoneInput);
       phoneInput.addEventListener('input', sanitizePhoneInput);
    }
  }

  updateSendOrderButton();
  cartModal.classList.add('open');
 
  // 1. –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤–∏–¥–∏–º–æ –¥–ª—è –∞—Å—Å–∏—Å—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –î–û –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞ 'open'
  cartModal.setAttribute('aria-hidden', 'false');
  // –¢–∞–∫–∂–µ —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–Ω–æ —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º–æ
  cartModal.setAttribute('tabindex', '-1');
  
  // 2. –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å 'open' –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  cartModal.classList.add('open');
  // –¢–∞–π–º–∞—É—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã DOM —É—Å–ø–µ–ª –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  setTimeout(() => {
    // –ü—ã—Ç–∞–µ–º—Å—è —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const phoneInputToFocus = document.getElementById('phone');
    if (phoneInputToFocus && typeof phoneInputToFocus.focus === 'function') {
      phoneInputToFocus.focus();
      console.log("–§–æ–∫—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –ø–æ–ª–µ #phone");
    } else {
      // –ï—Å–ª–∏ –ø–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –∫–Ω–æ–ø–∫–µ –∑–∞–∫—Ä—ã—Ç–∏—è
      const closeButton = cartModal.querySelector('.modal-close');
      if (closeButton && typeof closeButton.focus === 'function') {
        closeButton.focus();
        console.log("–§–æ–∫—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞");
      } else {
        // –ï—Å–ª–∏ –∏ –µ—ë –Ω–µ—Ç, —Ñ–æ–∫—É—Å –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        cartModal.setAttribute('tabindex', '-1'); // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ–∫—É—Å
        cartModal.focus();
        console.log("–§–æ–∫—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–∞–º–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ");
      }
    }
  }, 0); // –û—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞

  // --- –î–û–ë–ê–í–ò–¢–¨ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Æ –ú–ê–°–ö–ò –ó–î–ï–°–¨ –¢–û–ñ–ï ---
  // (–ö–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–∞—Å–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –º—ã –æ–±—Å—É–∂–¥–∞–ª–∏ —Ä–∞–Ω–µ–µ)
  if (typeof $ !== 'undefined' && $.fn.mask && phoneInput) {
    $(phoneInput).unmask();
    $(phoneInput).mask("+7 (999) 999-99-99", { placeholder: "+7 (___) ___-__-__" });
    console.log("–ú–∞—Å–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫ #phone");
  } else {
    console.warn("jQuery, maskedinput –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç #phone –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ú–∞—Å–∫–∞ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞.");
    if (phoneInput) {
       phoneInput.removeEventListener('input', sanitizePhoneInput);
       phoneInput.addEventListener('input', sanitizePhoneInput);
    }
  }
}
function sanitizePhoneInput(event) {
  event.target.value = event.target.value.replace(/[^0-9+]/g, '');
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–æ–∫
function closeModals() {
  const modal = document.querySelector('.modal.open');
  if (modal) modal.classList.remove('open');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"
function updateSendOrderButton() {
  if (!sendOrderBtn) return;
  
  const cart = getCart();
  const consentCheckbox = document.getElementById('consent-toggle');
  const isConsentGiven = consentCheckbox ? consentCheckbox.checked : false;
  
  if (cart.length === 0) {
    sendOrderBtn.disabled = true;
    sendOrderBtn.title = '–ù–µ–ª—å–∑—è –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ‚Äî –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞';
  } else if (!isConsentGiven) {
    sendOrderBtn.disabled = true;
    sendOrderBtn.title = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö';
  } else {
    sendOrderBtn.disabled = false;
    sendOrderBtn.title = '';
  }
}


// –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
  const searchInput = document.getElementById('search-input');

  if (searchInput) {
    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–æ–∏—Å–∫–∞
    searchInput.removeEventListener('input', renderProducts);
    searchInput.addEventListener('input', renderProducts);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π - –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–±
  const categoryButtons = document.querySelectorAll('.tag-btn');
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  categoryButtons.forEach(btn => {
    btn.removeEventListener('click', handleCategoryClick);
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  categoryButtons.forEach(btn => {
    btn.addEventListener('click', handleCategoryClick);
  });

  // –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π...
  if (cartBtn) {
    cartBtn.removeEventListener('click', openCartModal);
    cartBtn.addEventListener('click', openCartModal);
  }

  document.getElementById('add-to-cart-btn')?.addEventListener('click', () => addToCart(window.currentProduct));
  document.getElementById('buy-now-btn')?.addEventListener('click', () => {
    addToCart(window.currentProduct);
    closeModals();
    openCartModal();
  });

  phoneInput?.addEventListener('input', () => {
    phoneInput.value = phoneInput.value.replace(/[^0-9+]/g, '');
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —á–µ–∫–±–æ–∫—Å–∞ —Å–æ–≥–ª–∞—Å–∏—è
  const consentCheckbox = document.getElementById('consent-toggle');
  if (consentCheckbox) {
    consentCheckbox.addEventListener('change', updateSendOrderButton);
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞
  if (sendOrderBtn) {
    let isSending = false;
    
    sendOrderBtn.addEventListener('click', async () => {
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
      if (isSending) {
        console.log('–ó–∞–∫–∞–∑ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è...');
        return;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
      const consentCheckbox = document.getElementById('consent-toggle');
      const isConsentGiven = consentCheckbox ? consentCheckbox.checked : false;
      
      if (!isConsentGiven) {
        alert('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
        return;
      }
      
      if (!phoneInput.value.trim()) {
        alert('–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω');
        return;
      }
      
      if (getCart().length === 0) {
        alert('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');
        return;
      }

      try {
        isSending = true;
        sendOrderBtn.disabled = true;
        sendOrderBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';

        const response = await fetch('/api/order', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            phone: phoneInput.value,
            comment: commentInput.value,
            cart: getCart()
          })
        });

        const result = await response.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);

        if (result.success) {
          // –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
          clearCart();
          phoneInput.value = '';
          commentInput.value = '';
          successMessage.style.display = 'block';
          updateCartCount();
          openCartModal();

          setTimeout(() => {
            successMessage.style.display = 'none';
            sendOrderBtn.disabled = false;
            sendOrderBtn.textContent = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑';
            isSending = false;
          }, 3000);
        } else {
          // –û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
          throw new Error(result.error || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–∫–∞–∑ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (–ø–æ —Å—Ç–∞—Ç—É—Å—É –æ—Ç–≤–µ—Ç–∞)
        if (error.message && error.message.includes('–ó–∞–∫–∞–∑ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è')) {
          // –ó–∞–∫–∞–∑ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
          clearCart();
          phoneInput.value = '';
          commentInput.value = '';
          successMessage.style.display = 'block';
          updateCartCount();
          openCartModal();

          setTimeout(() => {
            successMessage.style.display = 'none';
            sendOrderBtn.disabled = false;
            sendOrderBtn.textContent = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑';
            isSending = false;
          }, 3000);
        } else {
          // –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
          alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º.');
          sendOrderBtn.disabled = false;
          sendOrderBtn.textContent = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑';
          isSending = false;
        }
      }
    });
  }

  document.querySelectorAll('[data-close]').forEach(btn => {
    btn.addEventListener('click', closeModals);
  });
}

// –û—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
function handleCategoryClick(event) {
  const categoryButtons = document.querySelectorAll('.tag-btn');
  const clickedBtn = event.target;
  
  // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
  categoryButtons.forEach(btn => {
    btn.classList.remove('active');
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–π –∫–Ω–æ–ø–∫–µ
  clickedBtn.classList.add('active');
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  window.currentCategory = clickedBtn.dataset.category || '–≤—Å–µ';
  
  // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
  renderProducts();
}

// –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ main.js –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
// main.js
document.addEventListener('DOMContentLoaded', async () => {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  window.currentCategory = '–≤—Å–µ'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  setupEventListeners();
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã
  await renderProducts();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞
  updateSendOrderButton();
});

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è renderProducts —Å —á–µ—Ç–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
async function renderProductsImproved() {
  if (renderProductsTimeout) {
    clearTimeout(renderProductsTimeout);
  }
  
  renderProductsTimeout = setTimeout(async () => {
    try {
      const res = await fetch('/api/products');
      
      if (!res.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã');
      }
      
      const PRODUCTS = await res.json();
      const query = (searchInput?.value || '').toLowerCase();
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      const currentCategory = window.currentCategory || '–≤—Å–µ';

      const filtered = PRODUCTS.filter(p => {
        const available = p.available !== false;
        
        // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        let categoryMatch = true;
        if (currentCategory !== '–≤—Å–µ') {
          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
          const productCategory = p.category || '';
          categoryMatch = productCategory.toLowerCase() === currentCategory.toLowerCase();
        }
        
        // –§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–∏—Å–∫—É
        const searchMatch = query === '' ||
          (p.title && p.title.toLowerCase().includes(query)) ||
          (p.description && p.description.toLowerCase().includes(query));
        
        return available && categoryMatch && searchMatch;
      });

      if (!productsContainer) {
        return;
      }

      productsContainer.innerHTML = '';

      if (filtered.length === 0) {
        productsContainer.innerHTML = `
          <div class="empty">
            <div class="text-6xl">üîç</div>
            <h3>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
          </div>
        `;
        return;
      }

      filtered.forEach((product) => {
        const card = document.createElement('div');
        card.className = 'product-card';
        card.innerHTML = `
          <div class="product-content">
            <h3 class="product-title">${product.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h3>
            <div class="product-image">
              <img src="${product.images && product.images[0]?.url?.trim() || '/assets/placeholder.png'}" alt="${product.title || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'}" />
              ${product.tag ? `<div class="product-badge" data-tag="${product.tag.toLowerCase()}">${product.tag}</div>` : ''}
            </div>
            <div class="product-footer">
              <div class="product-price">${formatPrice(product.price || 0)}</div>
              <div class="product-actions">
                <button class="btn-details" data-id="${product.id}">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
                <button class="btn-cart" data-id="${product.id}">–í –∫–æ—Ä–∑–∏–Ω—É</button>
              </div>
            </div>
          </div>
        `;
        productsContainer.appendChild(card);
      });
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
      document.querySelectorAll('.btn-details').forEach(button => {
        button.addEventListener('click', (event) => {
          const productId = parseInt(event.target.dataset.id);
          const product = PRODUCTS.find(p => p.id === productId);
          if (product) {
            openProductModal(product);
          }
        });
      });

      document.querySelectorAll('.btn-cart').forEach(button => {
        button.addEventListener('click', (event) => {
          const productId = parseInt(event.target.dataset.id);
          const product = PRODUCTS.find(p => p.id === productId);
          if (product) {
            addToCart(product);
            updateCartCount();
          }
        });
      });
      
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', err);
      if (productsContainer) {
        productsContainer.innerHTML = `
          <div class="empty">
            <div class="text-6xl">‚ö†Ô∏è</div>
            <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
            <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</p>
          </div>
        `;
      }
    }
  }, 300);
}

// –≠–∫—Å–ø–æ—Ä—Ç
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { renderProducts, openProductModal, openCartModal, closeModals, setupEventListeners };
} else {
  window.renderProducts = renderProducts;
  window.openProductModal = openProductModal;
  window.openCartModal = openCartModal;
  window.closeModals = closeModals;
  window.setupEventListeners = setupEventListeners;
}