// ui.js
// DOM-—ç–ª–µ–º–µ–Ω—Ç—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π/–∫–∞—Ç–∞–ª–æ–≥–∞)
const productsContainer = document.getElementById('products');
const searchInput = document.getElementById('search-input');
const categoryButtons = document.querySelectorAll('.tag-btn');
// const cartBtn = document.getElementById('cart-btn'); // <-- –£–±—Ä–∞–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–ø–µ—Ä—å –≤ main.js
// const cartModal = document.getElementById('cart-modal'); // <-- –£–±—Ä–∞–Ω–æ, –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
// const productModal = document.getElementById('product-modal'); // <-- –£–±—Ä–∞–Ω–æ, –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
// const cartItems = document.getElementById('cart-items'); // <-- –£–±—Ä–∞–Ω–æ, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É
// const phoneInput = document.getElementById('phone'); // <-- –£–±—Ä–∞–Ω–æ, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É
// const commentInput = document.getElementById('comment-input'); // <-- –£–±—Ä–∞–Ω–æ, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É
// const sendOrderBtn = document.getElementById('send-order'); // <-- –£–±—Ä–∞–Ω–æ, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É
// const successMessage = document.getElementById('success-message'); // <-- –£–±—Ä–∞–Ω–æ, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É
const yearSpan = document.getElementById('year');
let renderProductsTimeout;

// local-data.js –∏–ª–∏ –≤ –Ω–∞—á–∞–ª–µ ui.js
const LOCAL_PRODUCTS = [
  {
    id: 1,
    title: "BOBOVR BD3",
    description: "–î–æ–∫-—Å—Ç–∞–Ω—Ü–∏—è –¥–ª—è B100",
    price: 3390,
    category: "–î–æ–∫ —Å—Ç–∞–Ω—Ü–∏–∏",
    images: [
      { url: "/assets/Images-Products/–î–æ–∫ —Å—Ç–∞–Ω—Ü–∏–∏/BOBOVR BD3 –¥–ª—è B100/1.png", alt: "BOBOVR BD3" }
    ],
    tag: "–•–∏—Ç",
    available: true
  },
  // ... –¥—Ä—É–≥–∏–µ —Ç–æ–≤–∞—Ä—ã
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ–¥–∞
if (yearSpan) {
  yearSpan.textContent = new Date().getFullYear();
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
function formatPrice(price) {
  return new Intl.NumberFormat('ru-RU', {
    style: 'currency',
    currency: 'RUB',
    minimumFractionDigits: 0,
    maximumFractionDigits: 0
  }).format(price);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ localStorage (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–ª—é—á 'cart')
function getCart() {
  const cart = localStorage.getItem('cart'); // <-- –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á 'cart'
  return cart ? JSON.parse(cart) : [];
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–ª—é—á 'cart')
function addToCart(product) {
  console.log("ui.js: –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É:", product.id, product.title); // <-- –ù–æ–≤—ã–π –ª–æ–≥
  const cart = getCart();
  const existingItem = cart.find(item => item.product.id === product.id);

  if (existingItem) {
    existingItem.qty += 1;
  } else {
    cart.push({ product, qty: 1 });
  }

  localStorage.setItem('cart', JSON.stringify(cart)); // <-- –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á 'cart'
  updateCartCount(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–ª—é—á 'cart')
function updateQuantity(productId, change) {
  const cart = getCart();
  const item = cart.find(item => item.product.id === productId);

  if (item) {
    item.qty += change;
    if (item.qty <= 0) {
      const index = cart.indexOf(item);
      cart.splice(index, 1);
    }
    localStorage.setItem('cart', JSON.stringify(cart)); // <-- –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á 'cart'
    updateCartCount();
    // –£–ë–†–ê–ù–û: openCartModal(); // –ù–µ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  }
}

// –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–ª—é—á 'cart')
function clearCart() {
  localStorage.removeItem('cart'); // <-- –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á 'cart'
  updateCartCount();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function updateCartCount() {
  const cart = getCart();
  const count = cart.reduce((sum, item) => sum + item.qty, 0);
  const cartCountEls = document.querySelectorAll('#cart-count, #cart-count-header'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –∏–∑ state.js/main.js

  cartCountEls.forEach(el => {
    if (el) {
      el.textContent = count;
      el.style.display = count > 0 ? 'flex' : 'none'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º display: flex; –∫–∞–∫ –≤ state.js
    }
  });
}

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤
async function renderProducts() {
  if (renderProductsTimeout) {
    clearTimeout(renderProductsTimeout);
  }

  renderProductsTimeout = setTimeout(async () => {
    let PRODUCTS = [];
    let useLocalData = false;

    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞
      const res = await fetch('/api/products');

      if (!res.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã');
      }

      PRODUCTS = await res.json();

      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      if (!PRODUCTS || PRODUCTS.length === 0) {
        console.warn('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        PRODUCTS = LOCAL_PRODUCTS;
        useLocalData = true;
      }

    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞:', err);
      console.warn('–ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç');
      PRODUCTS = LOCAL_PRODUCTS;
      useLocalData = true;
    }

    // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è...
    const query = (searchInput?.value || '').toLowerCase();
    const currentCategory = window.currentCategory || '–≤—Å–µ';

    const filtered = PRODUCTS.filter(p => {
      const available = p.available !== false;
      const categoryMatch = currentCategory === '–≤—Å–µ' || p.category === currentCategory;
      const searchMatch = query === '' ||
        p.title.toLowerCase().includes(query) ||
        (p.description && p.description.toLowerCase().includes(query));

      return available && categoryMatch && searchMatch;
    });

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...
    if (!productsContainer) return;

    productsContainer.innerHTML = '';

    if (filtered.length === 0) {
      productsContainer.innerHTML = `
        <div class="empty">
          <div class="text-6xl">üîç</div>
          <h3>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
          ${useLocalData ? '<small class="text-muted">–û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</small>' : ''}
        </div>
      `;
      return;
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞—Ä—Ç–æ—á–µ–∫...
    filtered.forEach((product) => {
      const card = document.createElement('div');
      card.className = 'product-card';
      card.innerHTML = `
        <div class="product-content">
          <h3 class="product-title">${product.title}</h3>
          <div class="product-image">
            <img src="${product.images[0]?.url?.trim() || '/assets/icons/placeholder1.webp'}" alt="${product.title}" />
            ${product.tag ? `<div class="product-badge" data-tag="${product.tag.toLowerCase()}">${product.tag}</div>` : ''}
          </div>
          <div class="product-footer">
            <div class="product-price">${formatPrice(product.price)}</div>
            <div class="product-actions">
              <button class="btn-details" data-id="${product.id}">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
              <button class="btn-cart" data-id="${product.id}">–í –∫–æ—Ä–∑–∏–Ω—É</button>
            </div>
          </div>
        </div>
      `;
      productsContainer.appendChild(card);
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–ª–∏–∫–æ–≤ –ø–æ –≤—Å–µ–π –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞
    document.querySelectorAll('.product-card').forEach(card => {
      card.addEventListener('click', (event) => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –Ω–µ –ø–æ –∫–Ω–æ–ø–∫–µ "–í –∫–æ—Ä–∑–∏–Ω—É", —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
        if (event.target.classList.contains('btn-cart')) return;
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –Ω–µ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
        if (event.target.classList.contains('btn-details')) return;

        // –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
        const buttonDetails = card.querySelector('.btn-details');
        if (!buttonDetails) return;
        const productId = parseInt(buttonDetails.dataset.id);
        if (productId) {
            // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
            window.location.href = `product.html?id=${productId}`;
        }
      });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
    // –£–ë–†–ê–ù–û: –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞. –¢–µ–ø–µ—Ä—å "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" –≤–µ–¥—ë—Ç –Ω–∞ product.html.
    document.querySelectorAll('.btn-details').forEach(button => {
      button.addEventListener('click', (event) => {
        event.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ, —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ
        const productId = parseInt(event.target.dataset.id);
        // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
        window.location.href = `product.html?id=${productId}`;
      });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–í –∫–æ—Ä–∑–∏–Ω—É"
    document.querySelectorAll('.btn-cart').forEach(button => {
      button.addEventListener('click', (event) => {
        event.stopPropagation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ, —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ
        const productId = parseInt(event.target.dataset.id);
        const product = PRODUCTS.find(p => p.id === productId);
        if (product) {
          addToCart(product);
          updateCartCount();
        }
      });
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (useLocalData) {
      const indicator = document.createElement('div');
      indicator.className = 'local-data-indicator';
      indicator.innerHTML = '‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ';
      indicator.style.cssText = `
        position: fixed;
        top: 10px;
        right: 10px;
        background: #ff6b6b;
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 12px;
        z-index: 10000;
      `;
      document.body.appendChild(indicator);

      // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      setTimeout(() => {
        if (indicator.parentNode) {
          indicator.parentNode.removeChild(indicator);
        }
      }, 5000);
    }

  }, 300);
}

// –£–ë–†–ê–ù–û: –§—É–Ω–∫—Ü–∏—è openProductModal –∏ selectVariantInModal

// –£–ë–†–ê–ù–û: –§—É–Ω–∫—Ü–∏—è openCartModal (—Ç–µ–ø–µ—Ä—å –≤ main.js)
// –£–ë–†–ê–ù–û: –§—É–Ω–∫—Ü–∏—è sanitizePhoneInput (—Ç–µ–ø–µ—Ä—å –≤ main.js)
// –£–ë–†–ê–ù–û: –§—É–Ω–∫—Ü–∏—è closeModals (—Ç–µ–ø–µ—Ä—å –≤ main.js)
// –£–ë–†–ê–ù–û: –§—É–Ω–∫—Ü–∏—è updateSendOrderButton (—Ç–µ–ø–µ—Ä—å –≤ main.js)

// –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π/–∫–∞—Ç–∞–ª–æ–≥–∞)
function setupEventListeners() {
  const searchInput = document.getElementById('search-input');

  if (searchInput) {
    searchInput.removeEventListener('input', renderProducts);
    searchInput.addEventListener('input', renderProducts);
  }

  const categoryButtons = document.querySelectorAll('.tag-btn');

  categoryButtons.forEach(btn => {
    btn.removeEventListener('click', handleCategoryClick);
  });

  categoryButtons.forEach(btn => {
    btn.addEventListener('click', handleCategoryClick);
  });

  // –£–ë–†–ê–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è cartBtn (—Ç–µ–ø–µ—Ä—å –≤ main.js)
  // if (cartBtn) {
  //   cartBtn.removeEventListener('click', openCartModal); // <-- –£–±—Ä–∞–Ω–æ
  //   cartBtn.addEventListener('click', openCartModal); // <-- –£–±—Ä–∞–Ω–æ
  // }

  // –£–ë–†–ê–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É" –∏ "–ö—É–ø–∏—Ç—å" (–º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ) - –æ–Ω–∏ —Ç–µ–ø–µ—Ä—å –≤ product.js
  // document.getElementById('add-to-cart-btn')?.addEventListener('click', () => { ... });
  // document.getElementById('buy-now-btn')?.addEventListener('click', () => { ... });

  // –£–ë–†–ê–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  // phoneInput?.addEventListener('input', () => { ... });
  // const consentCheckbox = document.getElementById('consent-toggle');
  // if (consentCheckbox) { consentCheckbox.addEventListener('change', updateSendOrderButton); }
  // if (sendOrderBtn) { sendOrderBtn.addEventListener('click', async () => { ... }); }
  // document.querySelectorAll('[data-close]').forEach(btn => { btn.addEventListener('click', closeModals); });

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±, –µ—Å–ª–∏ –Ω–µ –≤ main.js)
  const cartBtn = document.getElementById('cart-btn'); // <-- –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∑–¥–µ—Å—å
  if (cartBtn) {
  cartBtn.addEventListener('click', () => {
       window.location.href = '/cart.html'; // <-- –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
     });
   }
}

function handleCategoryClick(event) {
  const categoryButtons = document.querySelectorAll('.tag-btn');
  const clickedBtn = event.target;

  categoryButtons.forEach(btn => {
    btn.classList.remove('active');
  });

  clickedBtn.classList.add('active');

  window.currentCategory = clickedBtn.dataset.category || '–≤—Å–µ';

  renderProducts();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async () => {
  window.currentCategory = '–≤—Å–µ';

  setupEventListeners();

  await renderProducts();

  // –£–ë–†–ê–ù–û: updateSendOrderButton(); // –ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π/–∫–∞—Ç–∞–ª–æ–≥–µ
  updateCartCount();
});

// –≠–∫—Å–ø–æ—Ä—Ç (—Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏)
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { renderProducts, setupEventListeners, getCart, addToCart, updateQuantity, clearCart, updateCartCount, formatPrice };
} else {
  window.renderProducts = renderProducts;
  window.setupEventListeners = setupEventListeners;
  // window.openProductModal = openProductModal; // <-- –£–±—Ä–∞–Ω–æ
  // window.openCartModal = openCartModal; // <-- –£–±—Ä–∞–Ω–æ
  // window.closeModals = closeModals; // <-- –£–±—Ä–∞–Ω–æ
  // window.updateSendOrderButton = updateSendOrderButton; // <-- –£–±—Ä–∞–Ω–æ

  // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã
  window.getCart = getCart;
  window.addToCart = addToCart;
  window.updateQuantity = updateQuantity;
  window.clearCart = clearCart;
  window.updateCartCount = updateCartCount;
  window.formatPrice = formatPrice; // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–æ
}