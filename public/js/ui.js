// ui.js
// DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
const productsContainer = document.getElementById('products');
const searchInput = document.getElementById('search-input');

const categoryButtons = document.querySelectorAll('.tag-btn');
const cartBtn = document.getElementById('cart-btn');
const cartModal = document.getElementById('cart-modal');
const productModal = document.getElementById('product-modal');
const cartItems = document.getElementById('cart-items');
const phoneInput = document.getElementById('phone-input');
const commentInput = document.getElementById('comment-input');
const sendOrderBtn = document.getElementById('send-order');
const successMessage = document.getElementById('success-message');
const yearSpan = document.getElementById('year');

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ–¥–∞
if (yearSpan) {
  yearSpan.textContent = new Date().getFullYear();
}

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤
async function renderProducts() {
  try {
    const res = await fetch('/api/products');
    if (!res.ok) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã');
    const PRODUCTS = await res.json();

    // üî• –û—Ç–ª–∞–¥–∫–∞
    console.log('–¢–æ–≤–∞—Ä—ã —Å —Å–µ—Ä–≤–µ—Ä–∞:', PRODUCTS);
    console.log('–¢–µ–∫—É—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:', window.currentCategory);

    const query = (searchInput?.value || '').toLowerCase();

    const filtered = PRODUCTS.filter(p =>
      p.available !== false &&
      (window.currentCategory === '–≤—Å–µ' || p.category === window.currentCategory) &&
      (query === '' ||
        p.title.toLowerCase().includes(query) ||
        p.description.toLowerCase().includes(query))
    );

    // üî• –û—Ç–ª–∞–¥–∫–∞
    console.log('–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:', filtered);

    if (!productsContainer) {
      console.error('–≠–ª–µ–º–µ–Ω—Ç #products –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    productsContainer.innerHTML = '';

    if (filtered.length === 0) {
      productsContainer.innerHTML = `
        <div class="empty">
          <div class="text-6xl">üîç</div>
          <h3>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
        </div>
      `;
      return;
    }

    filtered.forEach(product => {
      const card = document.createElement('div');
      card.className = 'product-card';
      card.innerHTML = `
        <div class="product-content">
          <h3 class="product-title">${product.title}</h3>
          <div class="product-image">
            <img src="${product.images[0]?.url?.trim() || '/assets/placeholder.png'}" alt="${product.title}" />
            ${product.tag ? `<div class="product-badge" data-tag="${product.tag.toLowerCase()}">${product.tag}</div>` : ''}
          </div>
          <div class="product-footer">
            <div class="product-price">${formatPrice(product.price)}</div>
            <div class="product-actions">
              <button class="btn-details" data-id="${product.id}">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
              <button class="btn-cart" data-id="${product.id}">–í –∫–æ—Ä–∑–∏–Ω—É</button>
            </div>
          </div>
        </div>
      `;
      productsContainer.appendChild(card);
    });
    // --- –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö —Ç–æ–≤–∞—Ä–æ–≤ ---
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
    document.querySelectorAll('.btn-details').forEach(button => {
      button.addEventListener('click', (event) => {
        const productId = parseInt(event.target.dataset.id);
        const product = PRODUCTS.find(p => p.id === productId);
        if (product) {
          openProductModal(product);
        } else {
          console.error(`–¢–æ–≤–∞—Ä —Å id ${productId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
        }
      });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–í –∫–æ—Ä–∑–∏–Ω—É"
    document.querySelectorAll('.btn-cart').forEach(button => {
      button.addEventListener('click', (event) => {
        const productId = parseInt(event.target.dataset.id);
        const product = PRODUCTS.find(p => p.id === productId);
        if (product) {
          addToCart(product); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è addToCart –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ –¥—Ä—É–≥–æ–º —Ñ–∞–π–ª–µ (cart.js)
          updateCartCount(); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è updateCartCount –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ –¥—Ä—É–≥–æ–º —Ñ–∞–π–ª–µ (cart.js)
        } else {
          console.error(`–¢–æ–≤–∞—Ä —Å id ${productId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
        }
      });
    });
    // --- –ö–æ–Ω–µ—Ü –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ---
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', err);
    if (productsContainer) {
      productsContainer.innerHTML = `
        <div class="empty">
          <div class="text-6xl">‚ö†Ô∏è</div>
          <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</p>
        </div>
      `;
    }
  }
}
// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–æ–≤–∞—Ä–∞
function openProductModal(product) {
  document.getElementById('product-title').textContent = product.title;
  document.getElementById('product-description').textContent = product.description;
  document.getElementById('product-price').textContent = formatPrice(product.price);
  document.getElementById('product-main-image').src = product.images[0].url.trim();

  const thumbnails = document.getElementById('thumbnails');
  thumbnails.innerHTML = '';
  product.images.forEach(img => {
    const thumb = document.createElement('img');
    thumb.src = img.url.trim();
    thumb.alt = img.alt;
    thumb.className = 'thumbnail';
    if (img.url === product.images[0].url) thumb.classList.add('active');

    thumb.addEventListener('click', () => {
      document.getElementById('product-main-image').src = img.url.trim();
      document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
      thumb.classList.add('active');
    });

    thumbnails.appendChild(thumb);
  });

  window.currentProduct = product;
  productModal.classList.add('open');
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ—Ä–∑–∏–Ω—ã
function openCartModal() {
  if (cartItems) {
    const cart = getCart();
    if (cart.length === 0) {
      cartItems.innerHTML = '<div class="empty">–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>';
    } else {
      cartItems.innerHTML = '';
      let total = 0;
      cart.forEach(item => {
        const row = document.createElement('div');
        row.className = 'cart-item';
        row.innerHTML = `
          <img src="${item.product.images[0].url.trim()}" alt="" />
          <div class="cart-item-info">
            <div class="cart-item-title">${item.product.title}</div>
            <div class="cart-item-price">${formatPrice(item.product.price)}</div>
            <div class="cart-quantity">
              <button class="qty-minus" data-id="${item.product.id}">‚àí</button>
              <span>${item.qty}</span>
              <button class="qty-plus" data-id="${item.product.id}">+</button>
            </div>
          </div>
          <div class="cart-item-total">${formatPrice(item.product.price * item.qty)}</div>
        `;
        cartItems.appendChild(row);
        total += item.product.price * item.qty;
      });

      const totalRow = document.createElement('div');
      totalRow.className = 'total-row';
      totalRow.innerHTML = `<span>–ò—Ç–æ–≥–æ:</span><span>${formatPrice(total)}</span>`;
      cartItems.appendChild(totalRow);

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
      document.querySelectorAll('.qty-minus').forEach(btn => {
        btn.addEventListener('click', () => {
          const id = parseInt(btn.dataset.id);
          updateQuantity(id, -1);
          openCartModal();
        });
      });

      document.querySelectorAll('.qty-plus').forEach(btn => {
        btn.addEventListener('click', () => {
          const id = parseInt(btn.dataset.id);
          updateQuantity(id, 1);
          openCartModal();
        });
      });
    }
  }

  updateSendOrderButton();
  cartModal.classList.add('open');
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–æ–∫
function closeModals() {
  const modal = document.querySelector('.modal.open');
  if (modal) modal.classList.remove('open');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"
function updateSendOrderButton() {
  if (!sendOrderBtn) return;
  if (getCart().length === 0) {
    sendOrderBtn.disabled = true;
    sendOrderBtn.title = '–ù–µ–ª—å–∑—è –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ‚Äî –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞';
  } else {
    sendOrderBtn.disabled = false;
    sendOrderBtn.title = '';
  }
}

// –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
  if (searchInput) {
    searchInput.addEventListener('input', renderProducts);
  }

  categoryButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      categoryButtons.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
      window.currentCategory = btn.dataset.category;
      renderProducts();
    });
  });

  if (cartBtn) {
    cartBtn.addEventListener('click', openCartModal);
  }

  document.getElementById('add-to-cart-btn')?.addEventListener('click', () => addToCart(window.currentProduct));
  document.getElementById('buy-now-btn')?.addEventListener('click', () => {
    addToCart(window.currentProduct);
    closeModals();
    openCartModal();
  });

  phoneInput?.addEventListener('input', () => {
    phoneInput.value = phoneInput.value.replace(/[^0-9+]/g, '');
  });

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  if (sendOrderBtn) {
    sendOrderBtn.addEventListener('click', async () => {
      if (!phoneInput.value.trim()) {
        alert('–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω');
        return;
      }
      if (getCart().length === 0) return;

      try {
        sendOrderBtn.disabled = true;
        sendOrderBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';

        const response = await fetch('/api/order', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            phone: phoneInput.value,
            comment: commentInput.value,
            cart: getCart()
          })
        });

        const result = await response.json();

        if (result.success) {
          clearCart();
          phoneInput.value = '';
          commentInput.value = '';
          successMessage.style.display = 'block';
          updateCartCount();
          openCartModal();

          setTimeout(() => {
            successMessage.style.display = 'none';
            sendOrderBtn.disabled = false;
            sendOrderBtn.textContent = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑';
          }, 3000);
        } else {
          throw new Error(result.error || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º.');
        sendOrderBtn.disabled = false;
        sendOrderBtn.textContent = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑';
      }
    });
  }

  document.querySelectorAll('[data-close]').forEach(btn => {
    btn.addEventListener('click', closeModals);
  });
}

// –≠–∫—Å–ø–æ—Ä—Ç
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { renderProducts, openProductModal, openCartModal, closeModals, setupEventListeners };
} else {
  window.renderProducts = renderProducts;
  window.openProductModal = openProductModal;
  window.openCartModal = openCartModal;
  window.closeModals = closeModals;
  window.setupEventListeners = setupEventListeners;
}