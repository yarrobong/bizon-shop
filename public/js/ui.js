// ui.js
// DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
const productsContainer = document.getElementById('products');
const searchInput = document.getElementById('search-input');
const categoryButtons = document.querySelectorAll('.tag-btn');
const cartBtn = document.getElementById('cart-btn');
const cartModal = document.getElementById('cart-modal');
const productModal = document.getElementById('product-modal');
const cartItems = document.getElementById('cart-items');
const phoneInput = document.getElementById('phone');
const commentInput = document.getElementById('comment-input');
const sendOrderBtn = document.getElementById('send-order');
const successMessage = document.getElementById('success-message');
const yearSpan = document.getElementById('year');
let renderProductsTimeout;

// local-data.js –∏–ª–∏ –≤ –Ω–∞—á–∞–ª–µ ui.js
const LOCAL_PRODUCTS = [
  {
    id: 1,
    title: "BOBOVR BD3",
    description: "–î–æ–∫-—Å—Ç–∞–Ω—Ü–∏—è –¥–ª—è B100",
    price: 3390,
    category: "–î–æ–∫ —Å—Ç–∞–Ω—Ü–∏–∏",
    images: [
      { url: "/assets/Images-Products/–î–æ–∫ —Å—Ç–∞–Ω—Ü–∏–∏/BOBOVR BD3 –¥–ª—è B100/1.png", alt: "BOBOVR BD3" }
    ],
    tag: "–•–∏—Ç",
    available: true
  },
  // ... –¥—Ä—É–≥–∏–µ —Ç–æ–≤–∞—Ä—ã
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ–¥–∞
if (yearSpan) {
  yearSpan.textContent = new Date().getFullYear();
}

function getScrollbarWidth() {
  const outer = document.createElement('div');
  outer.style.visibility = 'hidden';
  outer.style.overflow = 'scroll';
  outer.style.msOverflowStyle = 'scrollbar';
  document.body.appendChild(outer);
  
  const inner = document.createElement('div');
  outer.appendChild(inner);
  
  const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;
  
  outer.parentNode.removeChild(outer);
  
  return scrollbarWidth;
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
function formatPrice(price) {
  return new Intl.NumberFormat('ru-RU', {
    style: 'currency',
    currency: 'RUB',
    minimumFractionDigits: 0,
    maximumFractionDigits: 0
  }).format(price);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ localStorage
function getCart() {
  const cart = localStorage.getItem('cart');
  return cart ? JSON.parse(cart) : [];
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(product) {
  const cart = getCart();
  const existingItem = cart.find(item => item.product.id === product.id);
  
  if (existingItem) {
    existingItem.qty += 1;
  } else {
    cart.push({ product, qty: 1 });
  }
  
  localStorage.setItem('cart', JSON.stringify(cart));
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
function updateQuantity(productId, change) {
  const cart = getCart();
  const item = cart.find(item => item.product.id === productId);
  
  if (item) {
    item.qty += change;
    if (item.qty <= 0) {
      const index = cart.indexOf(item);
      cart.splice(index, 1);
    }
    localStorage.setItem('cart', JSON.stringify(cart));
    updateCartCount();
    // –¢–∞–∫–∂–µ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–æ—Ä–∑–∏–Ω—ã, —á—Ç–æ–±—ã –æ—Ç—Ä–∞–∑–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
    openCartModal(); // –∏–ª–∏ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å renderCartItems() –µ—Å–ª–∏ —Ç–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –µ—Å—Ç—å

  }
}

// –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function clearCart() {
  localStorage.removeItem('cart');
   updateCartCount();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function updateCartCount() {
  const cart = getCart();
  const count = cart.reduce((sum, item) => sum + item.qty, 0);
  const cartCount = document.getElementById('cart-count');
  if (cartCount) {
    cartCount.textContent = count;
    cartCount.style.display = count > 0 ? 'block' : 'none';
  }
}

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤
async function renderProducts() {
  if (renderProductsTimeout) {
    clearTimeout(renderProductsTimeout);
  }
  
  renderProductsTimeout = setTimeout(async () => {
    let PRODUCTS = [];
    let useLocalData = false;
    
    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞
      const res = await fetch('/api/products');
      
      if (!res.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã');
      }
      
      PRODUCTS = await res.json();
      
      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      if (!PRODUCTS || PRODUCTS.length === 0) {
        console.warn('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        PRODUCTS = LOCAL_PRODUCTS;
        useLocalData = true;
      }
      
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞:', err);
      console.warn('–ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç');
      PRODUCTS = LOCAL_PRODUCTS;
      useLocalData = true;
    }
    
    // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è...
    const query = (searchInput?.value || '').toLowerCase();
    const currentCategory = window.currentCategory || '–≤—Å–µ';

    const filtered = PRODUCTS.filter(p => {
      const available = p.available !== false;
      const categoryMatch = currentCategory === '–≤—Å–µ' || p.category === currentCategory;
      const searchMatch = query === '' ||
        p.title.toLowerCase().includes(query) ||
        (p.description && p.description.toLowerCase().includes(query));
      
      return available && categoryMatch && searchMatch;
    });

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...
    if (!productsContainer) return;

    productsContainer.innerHTML = '';

    if (filtered.length === 0) {
      productsContainer.innerHTML = `
        <div class="empty">
          <div class="text-6xl">üîç</div>
          <h3>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
          ${useLocalData ? '<small class="text-muted">–û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</small>' : ''}
        </div>
      `;
      return;
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞—Ä—Ç–æ—á–µ–∫...
    filtered.forEach((product) => {
      const card = document.createElement('div');
      card.className = 'product-card';
      card.innerHTML = `
        <div class="product-content">
          <h3 class="product-title">${product.title}</h3>
          <div class="product-image">
            <img src="${product.images[0]?.url?.trim() || '/assets/placeholder.png'}" alt="${product.title}" />
            ${product.tag ? `<div class="product-badge" data-tag="${product.tag.toLowerCase()}">${product.tag}</div>` : ''}
          </div>
          <div class="product-footer">
            <div class="product-price">${formatPrice(product.price)}</div>
            <div class="product-actions">
              <button class="btn-details" data-id="${product.id}">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
              <button class="btn-cart" data-id="${product.id}">–í –∫–æ—Ä–∑–∏–Ω—É</button>
            </div>
          </div>
        </div>
      `;
      productsContainer.appendChild(card);
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–ª–∏–∫–æ–≤ –ø–æ –≤—Å–µ–π –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞
    document.querySelectorAll('.product-card').forEach(card => {
      card.addEventListener('click', (event) => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –Ω–µ –ø–æ –∫–Ω–æ–ø–∫–µ "–í –∫–æ—Ä–∑–∏–Ω—É", —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
        if (event.target.classList.contains('btn-cart')) return;

        const buttonDetails = card.querySelector('.btn-details');
        if (!buttonDetails) return;

        const productId = parseInt(buttonDetails.dataset.id);
        const product = PRODUCTS.find(p => p.id === productId);

        if (product) {
          openProductModal(product);
        }
      });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
    document.querySelectorAll('.btn-details').forEach(button => {
      button.addEventListener('click', (event) => {
        const productId = parseInt(event.target.dataset.id);
        const product = PRODUCTS.find(p => p.id === productId);
        if (product) {
          openProductModal(product);
        }
      });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–í –∫–æ—Ä–∑–∏–Ω—É"
    document.querySelectorAll('.btn-cart').forEach(button => {
      button.addEventListener('click', (event) => {
        const productId = parseInt(event.target.dataset.id);
        const product = PRODUCTS.find(p => p.id === productId);
        if (product) {
          addToCart(product);
          updateCartCount();
        }
      });
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (useLocalData) {
      const indicator = document.createElement('div');
      indicator.className = 'local-data-indicator';
      indicator.innerHTML = '‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ';
      indicator.style.cssText = `
        position: fixed;
        top: 10px;
        right: 10px;
        background: #ff6b6b;
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 12px;
        z-index: 10000;
      `;
      document.body.appendChild(indicator);
      
      // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      setTimeout(() => {
        if (indicator.parentNode) {
          indicator.parentNode.removeChild(indicator);
        }
      }, 5000);
    }
    
  }, 300);
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–æ–≤–∞—Ä–∞
function openProductModal(product) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    const scrollY = window.scrollY || window.pageYOffset;
    document.body.setAttribute('data-scroll-position', scrollY);
    // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é
    document.body.classList.add('modal-open');
    document.body.style.setProperty('--scrollbar-width', getScrollbarWidth() + 'px');
    document.body.style.top = `-${scrollY}px`;

    // --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ ---
    const titleElement = document.getElementById('product-title');
    const descriptionElement = document.getElementById('product-description');
    const priceElement = document.getElementById('product-price');
    const mainImageElement = document.getElementById('product-main-image');
    const thumbnailsContainer = document.getElementById('thumbnails');
    const addToCartBtn = document.getElementById('add-to-cart-btn');
    const buyNowBtn = document.getElementById('buy-now-btn');

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ "–æ—Å–Ω–æ–≤–Ω–æ–π" —Ç–æ–≤–∞—Ä
    window.currentProduct = product;
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º "—Ç–µ–∫—É—â–∏–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –≤–∞—Ä–∏–∞–Ω—Ç" –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä
    window.currentDisplayedVariant = product;

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä)
    titleElement.textContent = product.title;
    descriptionElement.textContent = product.description || '';
    priceElement.textContent = formatPrice(product.price);
    mainImageElement.src = product.images && product.images[0] ? product.images[0].url.trim() : '/assets/placeholder.png';
    mainImageElement.alt = product.title || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';

    // –û–±–Ω–æ–≤–ª—è–µ–º –º–∏–Ω–∏–∞—Ç—é—Ä—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä)
    thumbnailsContainer.innerHTML = '';
    if (product.images && product.images.length > 0) {
        product.images.forEach(img => {
            const thumb = document.createElement('img');
            thumb.src = img.url.trim();
            thumb.alt = img.alt || `–ú–∏–Ω–∏–∞—Ç—é—Ä–∞ ${product.title}`;
            thumb.className = 'thumbnail';
            if (img.url === product.images[0].url) thumb.classList.add('active');
            thumb.addEventListener('click', () => {
                mainImageElement.src = img.url.trim();
                document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
                thumb.classList.add('active');
            });
            thumbnailsContainer.appendChild(thumb);
        });
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –∫–Ω–æ–ø–æ–∫ "–í –∫–æ—Ä–∑–∏–Ω—É" –∏ "–ö—É–ø–∏—Ç—å"
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä
    addToCartBtn.dataset.id = product.id;
    buyNowBtn.dataset.id = product.id;

    // --- –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ ---
    const variantsContainer = document.getElementById('product-variants-container');
    const variantsList = document.getElementById('product-variants');

    if (product.variants && product.variants.length > 0) {
        // –ï—Å–ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –µ—Å—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã
        variantsContainer.style.display = 'block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        variantsList.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫

        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¢–û–õ–¨–ö–û –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
        product.variants.forEach(variant => {
            const variantBtn = document.createElement('button');

            // –ü–æ–ª—É—á–∞–µ–º URL –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–∞
            let variantImageUrl = '/assets/placeholder.png'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
            if (variant.images && variant.images.length > 0 && variant.images[0].url) {
                variantImageUrl = variant.images[0].url.trim();
            } else if (product.images && product.images.length > 0 && product.images[0].url) {
                // –ï—Å–ª–∏ —É –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
                variantImageUrl = product.images[0].url.trim();
            }

            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const imgElement = document.createElement('img');
            imgElement.src = variantImageUrl;
            imgElement.alt = `–§–æ—Ç–æ ${variant.title || `–¢–æ–≤–∞—Ä ${variant.id}`}`;
            imgElement.className = 'variant-thumbnail';

            // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è
            const textElement = document.createElement('span');
            textElement.textContent = variant.title || `–¢–æ–≤–∞—Ä ${variant.id}`;

            // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Ç–µ–∫—Å—Ç –≤ –∫–Ω–æ–ø–∫—É
            variantBtn.appendChild(imgElement);
            variantBtn.appendChild(textElement);

            variantBtn.className = 'product-variant-btn';
            variantBtn.dataset.variantId = variant.id;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            variantBtn.addEventListener('click', () => {
                // –í—ã–±–∏—Ä–∞–µ–º —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –∫–∞–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π
                selectVariantInModal(product, variant);
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –∫–Ω–æ–ø–æ–∫
                document.querySelectorAll('.product-variant-btn').forEach(btn => btn.classList.remove('selected'));
                variantBtn.classList.add('selected');
            });
            
            variantsList.appendChild(variantBtn);
        });

        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const firstVariant = product.variants[0];
        if (firstVariant) {
            selectVariantInModal(product, firstVariant);
            const firstVariantBtn = document.querySelector(`.product-variant-btn[data-variant-id="${firstVariant.id}"]`);
            if (firstVariantBtn) {
                firstVariantBtn.classList.add('selected');
            }
        }

    } else {
        // –ï—Å–ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        variantsContainer.style.display = 'none';
    }
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    productModal.classList.add('open');
}

// –ù–æ–≤–∞—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞
function selectVariantInModal(product, selectedVariant) {
    const titleElement = document.getElementById('product-title');
    const descriptionElement = document.getElementById('product-description');
    const priceElement = document.getElementById('product-price');
    const mainImageElement = document.getElementById('product-main-image');
    const thumbnailsContainer = document.getElementById('thumbnails');
    const addToCartBtn = document.getElementById('add-to-cart-btn');
    const buyNowBtn = document.getElementById('buy-now-btn');

    // –ü—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    if (!titleElement || !descriptionElement || !priceElement || !mainImageElement || !thumbnailsContainer || !addToCartBtn) {
        console.error('–û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
        return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
    titleElement.textContent = selectedVariant.title;
    descriptionElement.textContent = selectedVariant.description || product.description || '';
    priceElement.textContent = formatPrice(selectedVariant.price);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const variantImages = selectedVariant.images && selectedVariant.images.length > 0 ? selectedVariant.images : (product.images || []);
    if (variantImages && variantImages.length > 0) {
        mainImageElement.src = variantImages[0].url.trim();
        mainImageElement.alt = selectedVariant.title || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';

        // –û–±–Ω–æ–≤–ª—è–µ–º –º–∏–Ω–∏–∞—Ç—é—Ä—ã
        thumbnailsContainer.innerHTML = '';
        variantImages.forEach(img => {
            const thumb = document.createElement('img');
            thumb.src = img.url.trim();
            thumb.alt = img.alt || `–ú–∏–Ω–∏–∞—Ç—é—Ä–∞ ${selectedVariant.title}`;
            thumb.className = 'thumbnail';
            if (img.url === variantImages[0].url) thumb.classList.add('active');
            thumb.addEventListener('click', () => {
                mainImageElement.src = img.url.trim();
                document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
                thumb.classList.add('active');
            });
            thumbnailsContainer.appendChild(thumb);
        });
    } else {
         mainImageElement.src = '/assets/placeholder.png';
         mainImageElement.alt = selectedVariant.title || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';
         thumbnailsContainer.innerHTML = '';
    }

    // –í–ê–ñ–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º dataset.id –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
    // –≠—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
    addToCartBtn.dataset.id = selectedVariant.id;
    if (buyNowBtn) {
        buyNowBtn.dataset.id = selectedVariant.id;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ–∫—É—â–∏–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
    window.currentDisplayedVariant = selectedVariant;
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ—Ä–∑–∏–Ω—ã
function openCartModal() {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  const scrollY = window.scrollY || window.pageYOffset;
  document.body.setAttribute('data-scroll-position', scrollY);
  
  // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é
  document.body.classList.add('modal-open');
  document.body.style.setProperty('--scrollbar-width', getScrollbarWidth() + 'px');
  document.body.style.top = `-${scrollY}px`;
  
  if (cartItems) {
    const cart = getCart();
    if (cart.length === 0) {
      cartItems.innerHTML = '<div class="empty">–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>';
    } else {
      cartItems.innerHTML = '';
      let total = 0;
      cart.forEach(item => {
        const row = document.createElement('div');
        row.className = 'cart-item';
        row.innerHTML = `
          <img src="${item.product.images[0].url.trim()}" alt="" />
          <div class="cart-item-info">
            <div class="cart-item-title">${item.product.title}</div>
            <div class="cart-item-price">${formatPrice(item.product.price)}</div>
            <div class="cart-quantity">
              <button class="qty-minus" data-id="${item.product.id}">‚àí</button>
              <span>${item.qty}</span>
              <button class="qty-plus" data-id="${item.product.id}">+</button>
            </div>
          </div>
          <div class="cart-item-total">${formatPrice(item.product.price * item.qty)}</div>
        `;
        cartItems.appendChild(row);
        total += item.product.price * item.qty;
      });

      const totalRow = document.createElement('div');
      totalRow.className = 'total-row';
      totalRow.innerHTML = `<span>–ò—Ç–æ–≥–æ:</span><span>${formatPrice(total)}</span>`;
      cartItems.appendChild(totalRow);

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
      document.querySelectorAll('.qty-minus').forEach(btn => {
        btn.addEventListener('click', () => {
          const id = parseInt(btn.dataset.id);
          updateQuantity(id, -1);
          openCartModal();
        });
      });

      document.querySelectorAll('.qty-plus').forEach(btn => {
        btn.addEventListener('click', () => {
          const id = parseInt(btn.dataset.id);
          updateQuantity(id, 1);
          openCartModal();
        });
      });
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ jQuery –∏ maskedinput –¥–æ—Å—Ç—É–ø–Ω—ã, –∏ —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (typeof $ !== 'undefined' && $.fn.mask && phoneInput) {
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –ª—é–±—É—é —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –º–∞—Å–∫—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    $(phoneInput).unmask();
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∞—Å–∫—É
    $(phoneInput).mask("+7 (999) 999-99-99", { placeholder: "+7 (___) ___-__-__" });
  } else {
    console.warn("jQuery, maskedinput –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç #phone –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ú–∞—Å–∫–∞ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞.");
    if (phoneInput) {
       phoneInput.removeEventListener('input', sanitizePhoneInput);
       phoneInput.addEventListener('input', sanitizePhoneInput);
    }
  }

  updateSendOrderButton();
  
  cartModal.setAttribute('aria-hidden', 'false');
  cartModal.setAttribute('tabindex', '-1');
  
  cartModal.classList.add('open');
  setTimeout(() => {
    const phoneInputToFocus = document.getElementById('phone');
    if (phoneInputToFocus && typeof phoneInputToFocus.focus === 'function') {
      phoneInputToFocus.focus();
    } else {
      const closeButton = cartModal.querySelector('.modal-close');
      if (closeButton && typeof closeButton.focus === 'function') {
        closeButton.focus();
      } else {
        cartModal.setAttribute('tabindex', '-1');
        cartModal.focus();
      }
    }
  }, 0);

  if (typeof $ !== 'undefined' && $.fn.mask && phoneInput) {
    $(phoneInput).unmask();
    $(phoneInput).mask("+7 (999) 999-99-99", { placeholder: "+7 (___) ___-__-__" });
  } else {
    console.warn("jQuery, maskedinput –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç #phone –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ú–∞—Å–∫–∞ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞.");
    if (phoneInput) {
       phoneInput.removeEventListener('input', sanitizePhoneInput);
       phoneInput.addEventListener('input', sanitizePhoneInput);
    }
  }
}

function sanitizePhoneInput(event) {
  event.target.value = event.target.value.replace(/[^0-9+]/g, '');
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–æ–∫
function closeModals() {
  const modal = document.querySelector('.modal.open');
  if (modal) modal.classList.remove('open');

  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  const scrollY = document.body.getAttribute('data-scroll-position');
  document.body.classList.remove('modal-open');
  document.body.style.removeProperty('--scrollbar-width');
  document.body.style.removeProperty('top');
  
  if (scrollY) {
    window.scrollTo(0, parseInt(scrollY));
    document.body.removeAttribute('data-scroll-position');
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"
function updateSendOrderButton() {
  if (!sendOrderBtn) return;
  
  const cart = getCart();
  const consentCheckbox = document.getElementById('consent-toggle');
  const isConsentGiven = consentCheckbox ? consentCheckbox.checked : false;
  
  if (cart.length === 0) {
    sendOrderBtn.disabled = true;
    sendOrderBtn.title = '–ù–µ–ª—å–∑—è –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ‚Äî –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞';
  } else if (!isConsentGiven) {
    sendOrderBtn.disabled = true;
    sendOrderBtn.title = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö';
  } else {
    sendOrderBtn.disabled = false;
    sendOrderBtn.title = '';
  }
}

// –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
  const searchInput = document.getElementById('search-input');

  if (searchInput) {
    searchInput.removeEventListener('input', renderProducts);
    searchInput.addEventListener('input', renderProducts);
  }

  const categoryButtons = document.querySelectorAll('.tag-btn');
  
  categoryButtons.forEach(btn => {
    btn.removeEventListener('click', handleCategoryClick);
  });
  
  categoryButtons.forEach(btn => {
    btn.addEventListener('click', handleCategoryClick);
  });

  if (cartBtn) {
    cartBtn.removeEventListener('click', openCartModal);
    cartBtn.addEventListener('click', openCartModal);
  }

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
  document.getElementById('add-to-cart-btn')?.addEventListener('click', () => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –≤–∞—Ä–∏–∞–Ω—Ç, –∞ –Ω–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä
    if (window.currentDisplayedVariant) {
      addToCart(window.currentDisplayedVariant);
    } else if (window.currentProduct) {
      addToCart(window.currentProduct);
    }
    updateCartCount();
  });

  document.getElementById('buy-now-btn')?.addEventListener('click', () => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –≤–∞—Ä–∏–∞–Ω—Ç, –∞ –Ω–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä
    if (window.currentDisplayedVariant) {
      addToCart(window.currentDisplayedVariant);
    } else if (window.currentProduct) {
      addToCart(window.currentProduct);
    }
    closeModals();
    openCartModal();
    updateCartCount();
  });

  phoneInput?.addEventListener('input', () => {
    phoneInput.value = phoneInput.value.replace(/[^0-9+]/g, '');
  });

  const consentCheckbox = document.getElementById('consent-toggle');
  if (consentCheckbox) {
    consentCheckbox.addEventListener('change', updateSendOrderButton);
  }

  if (sendOrderBtn) {
    let isSending = false;
    
    sendOrderBtn.addEventListener('click', async () => {
      if (isSending) {
        console.log('–ó–∞–∫–∞–∑ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è...');
        return;
      }
      
      const consentCheckbox = document.getElementById('consent-toggle');
      const isConsentGiven = consentCheckbox ? consentCheckbox.checked : false;
      
      if (!isConsentGiven) {
        alert('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
        return;
      }
      
      if (!phoneInput.value.trim()) {
        alert('–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω');
        return;
      }
      
      if (getCart().length === 0) {
        alert('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');
        return;
      }

      try {
        isSending = true;
        sendOrderBtn.disabled = true;
        sendOrderBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';

        const response = await fetch('/api/order', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            phone: phoneInput.value,
            comment: commentInput.value,
            cart: getCart()
          })
        });

        const result = await response.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);

        if (result.success) {
          clearCart();
          phoneInput.value = '';
          commentInput.value = '';
          successMessage.style.display = 'block';
          updateCartCount();
          openCartModal();

          setTimeout(() => {
            successMessage.style.display = 'none';
            sendOrderBtn.disabled = false;
            sendOrderBtn.textContent = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑';
            isSending = false;
          }, 3000);
        } else {
          throw new Error(result.error || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
        
        if (error.message && error.message.includes('–ó–∞–∫–∞–∑ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è')) {
          clearCart();
          phoneInput.value = '';
          commentInput.value = '';
          successMessage.style.display = 'block';
          updateCartCount();
          openCartModal();

          setTimeout(() => {
            successMessage.style.display = 'none';
            sendOrderBtn.disabled = false;
            sendOrderBtn.textContent = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑';
            isSending = false;
          }, 3000);
        } else {
          alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º.');
          sendOrderBtn.disabled = false;
          sendOrderBtn.textContent = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑';
          isSending = false;
        }
      }
    });
  }

  document.querySelectorAll('[data-close]').forEach(btn => {
    btn.addEventListener('click', closeModals);
  });
}

function handleCategoryClick(event) {
  const categoryButtons = document.querySelectorAll('.tag-btn');
  const clickedBtn = event.target;
  
  categoryButtons.forEach(btn => {
    btn.classList.remove('active');
  });
  
  clickedBtn.classList.add('active');
  
  window.currentCategory = clickedBtn.dataset.category || '–≤—Å–µ';
  
  renderProducts();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async () => {
  window.currentCategory = '–≤—Å–µ';
  
  setupEventListeners();
  
  await renderProducts();
  
  updateSendOrderButton();
  updateCartCount();
});

// –≠–∫—Å–ø–æ—Ä—Ç
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { renderProducts, openProductModal, openCartModal, closeModals, setupEventListeners };
} else {
  window.renderProducts = renderProducts;
  window.openProductModal = openProductModal;
  window.openCartModal = openCartModal;
  window.closeModals = closeModals;
  window.setupEventListeners = setupEventListeners;
}