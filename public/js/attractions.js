// js/attractions.js

(function () {
  'use strict';

  // --- DOM Elements ---
  const attractionsContainer = document.getElementById('attractions-container');
  const searchInput = document.getElementById('search-input');
  const categoryButtons = document.querySelectorAll('.tag-btn');
  const attractionModal = document.getElementById('attraction-modal');
  const cartBtn = document.getElementById('cart-btn');
  const cartModal = document.getElementById('cart-modal');

  // --- State ---
  let currentCategory = '–≤—Å–µ';
  let ATTRACTIONS = []; // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∞–Ω–Ω—ã–º–∏

  // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
  document.addEventListener('DOMContentLoaded', async function () {
    console.log('Attractions page loaded');
    await loadAttractions(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    renderAttractions(); // –†–µ–Ω–¥–µ—Ä–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏
    setupEventListeners(); // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    if (window.updateCartCount) window.updateCartCount(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã (–∏–∑ state.js)
  });

  // --- Data Loading ---
  async function loadAttractions() {
    // –í—Å–µ–≥–¥–∞ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
    try {
      console.log('–ó–∞–ø—Ä–æ—Å –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞...');
      const response = await fetch('/api/attractions');

      if (!response.ok) {
        // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ 2xx, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        const errorData = await response.json().catch(() => ({})); // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å JSON –æ—à–∏–±–∫–∏
        throw new Error(`HTTP error! status: ${response.status}. ${errorData.error || ''} Details: ${errorData.details || ''}`);
      }

      const data = await response.json();
      console.log('–î–∞–Ω–Ω—ã–µ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã:', data);
      ATTRACTIONS = data; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
      if (!ATTRACTIONS || ATTRACTIONS.length === 0) {
        console.warn('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤.');
        if (attractionsContainer) {
          attractionsContainer.innerHTML = `
            <div class="empty">
              <div class="text-6xl">ü™Ñ</div>
              <h3>–ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
              <p>–ö–∞—Ç–∞–ª–æ–≥ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –ø—É—Å—Ç. –ó–∞–≥–ª—è–Ω–∏—Ç–µ –ø–æ–∑–∂–µ!</p>
              <small class="text-muted">–î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞, –Ω–æ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç.</small>
            </div>
          `;
        }
        return; // –í—ã—Ö–æ–¥–∏–º, —Ç–∞–∫ –∫–∞–∫ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç
      }

    } catch (error) {
      // –õ—é–±–∞—è –æ—à–∏–±–∫–∞ (—Å–µ—Ç–µ–≤–∞—è, JSON.parse, HTTP status code –∏ —Ç.–¥.)
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤:', error);
      if (attractionsContainer) {
        attractionsContainer.innerHTML = `
          <div class="empty error">
            <div class="text-6xl">‚ùó</div>
            <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
            <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤.</p>
            <p class="error-details">–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12).</p>
            <small class="text-muted">–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–æ —Å —Å–µ—Ç–µ–≤–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π –∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –æ—à–∏–±–∫–æ–π —Å–µ—Ä–≤–µ—Ä–∞.</small>
            <button onclick="location.reload()" class="btn-details" style="margin-top: 1rem;">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É</button>
          </div>
        `;
      }
    }
  }

  // --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–∞ ---
  // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∑–¥–µ—Å—å, –≤—ã—à–µ, —á–µ–º –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
  function createAttractionCard(attraction) {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑ –æ–±—ä–µ–∫—Ç–∞
    const specs = attraction.specs || {};
    const places = specs.places || 'N/A';
    const power = specs.power || 'N/A';
    const games = specs.games || 'N/A';
    const area = specs.area || 'N/A';
    const dimensions = specs.dimensions || 'N/A';

    const card = document.createElement('div');
    card.className = 'attraction-card';
    card.innerHTML = `
      <div class="attraction-image">
        <img src="${attraction.image}" onerror="this.onerror=null; this.src='/assets/placeholder.png';" alt="${attraction.title}" />
      </div>
      <div class="attraction-info">
        <h3 class="attraction-title">${attraction.title}</h3>
        <div class="attraction-price">${window.formatPrice ? window.formatPrice(attraction.price) : `${attraction.price}‚ÇΩ`}</div>
        <div class="attraction-specs">
          <div class="spec-item">
            <span class="spec-label">–ú–µ—Å—Ç:</span> <span class="spec-value">${places}</span>
          </div>
          <div class="spec-item">
            <span class="spec-label">–ú–æ—â–Ω–æ—Å—Ç—å:</span> <span class="spec-value">${power}</span>
          </div>
          <div class="spec-item">
            <span class="spec-label">–ò–≥—Ä—ã:</span> <span class="spec-value">${games}</span>
          </div>
          <div class="spec-item">
            <span class="spec-label">–ü–ª–æ—â–∞–¥—å:</span> <span class="spec-value">${area}</span>
          </div>
          <div class="spec-item">
            <span class="spec-label">–†–∞–∑–º–µ—Ä—ã:</span> <span class="spec-value">${dimensions}</span>
          </div>
        </div>
        <div class="attraction-description">${attraction.description ? (attraction.description.substring(0, 100) + (attraction.description.length > 100 ? '...' : '')) : ''}</div>
        <div class="product-actions">
          <button class="btn-details" data-id="${attraction.id}">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
          <button class="btn-cart" data-id="${attraction.id}">–í –∫–æ—Ä–∑–∏–Ω—É</button>
        </div>
      </div>
    `;
    return card;
  }

  // --- Rendering ---
  function renderAttractions() {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    if (!attractionsContainer) {
      console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ (#attractions-container) –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM');
      return;
    }

    // –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
    attractionsContainer.innerHTML = '';

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª–∏ –ª–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    if (!ATTRACTIONS || ATTRACTIONS.length === 0) {
      // –≠—Ç–æ—Ç —Å–ª—É—á–∞–π –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –≤ loadAttractions, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
      console.warn('renderAttractions –≤—ã–∑–≤–∞–Ω, –Ω–æ –¥–∞–Ω–Ω—ã–µ ATTRACTIONS –ø—É—Å—Ç—ã –∏–ª–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã.');
      return; // –ü—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const query = (searchInput?.value || '').toLowerCase().trim();
    // currentCategory –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ handleCategoryClick –∏ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ '–≤—Å–µ'

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    const filtered = ATTRACTIONS.filter(attraction => {
      const matchesCategory = currentCategory === '–≤—Å–µ' || attraction.category === currentCategory;
      const matchesSearch = !query ||
        (attraction.title && attraction.title.toLowerCase().includes(query)) ||
        (attraction.description && attraction.description.toLowerCase().includes(query));

      return matchesCategory && matchesSearch;
    });

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è "–Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    if (filtered.length === 0) {
      attractionsContainer.innerHTML = `
        <div class="empty">
          <div class="text-6xl">üîç</div>
          <h3>–ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.</p>
        </div>
      `;
      return;
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é createAttractionCard, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤—ã—à–µ
    filtered.forEach(attraction => {
      const card = createAttractionCard(attraction);
      attractionsContainer.appendChild(card);
    });

    // –ù–∞–≤–µ—à–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –≤–Ω–æ–≤—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    document.querySelectorAll('.attraction-card').forEach(card => {
      const detailsBtn = card.querySelector('.btn-details');
      const cartBtn = card.querySelector('.btn-cart');
      const attractionId = detailsBtn?.dataset.id || cartBtn?.dataset.id; // –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ –∫–Ω–æ–ø–∫–∏

      // –ù–∞—Ö–æ–¥–∏–º –æ–±—ä–µ–∫—Ç –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–∞ –ø–æ ID
      const attraction = ATTRACTIONS.find(a => a.id == attractionId);

      if (attraction) { // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω –Ω–∞–π–¥–µ–Ω
        if (detailsBtn) {
          // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ –∫–ª–∏–∫–∞ —Å –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É
          detailsBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            openAttractionModal(attraction); // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
          });
        }

        if (cartBtn) {
          // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ –∫–ª–∏–∫–∞ —Å –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É
          cartBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ –∏–∑ state.js)
            if (window.addToCart) {
              window.addToCart(attraction);
              // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ –∏–∑ state.js)
              if (window.updateCartCount) window.updateCartCount();
            } else {
              console.error('–§—É–Ω–∫—Ü–∏—è window.addToCart –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ state.js.');
            }
          });
        }

        // –ö–ª–∏–∫ –ø–æ –≤—Å–µ–π –∫–∞—Ä—Ç–æ—á–∫–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        card.addEventListener('click', () => openAttractionModal(attraction));
      } else {
        console.error(`–ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω —Å ID ${attractionId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö ATTRACTIONS.`);
      }
    });
  }

  // --- Modals ---
  function openAttractionModal(attraction) {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑ –æ–±—ä–µ–∫—Ç–∞
    const specs = attraction.specs || {};
    const places = specs.places || 'N/A';
    const power = specs.power || 'N/A';
    const games = specs.games || 'N/A';
    const area = specs.area || 'N/A';
    const dimensions = specs.dimensions || 'N/A';

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞
    const scrollY = window.scrollY || window.pageYOffset;
    document.body.setAttribute('data-scroll-position', scrollY);
    // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é
    document.body.classList.add('modal-open');
    // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ getScrollbarWidth –¥–æ—Å—Ç—É–ø–Ω–∞, –∏–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –µ—ë –∑–¥–µ—Å—å
    const scrollbarWidth = window.getScrollbarWidth ? window.getScrollbarWidth() : (function() {
      const outer = document.createElement('div');
      outer.style.visibility = 'hidden';
      outer.style.overflow = 'scroll';
      outer.style.msOverflowStyle = 'scrollbar';
      document.body.appendChild(outer);
      const inner = document.createElement('div');
      outer.appendChild(inner);
      const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;
      outer.parentNode.removeChild(outer);
      return scrollbarWidth;
    })();
    document.body.style.setProperty('--scrollbar-width', scrollbarWidth + 'px');
    document.body.style.top = `-${scrollY}px`;

    const titleElement = document.getElementById('attraction-title');
    const descriptionElement = document.getElementById('attraction-description');
    const priceElement = document.getElementById('attraction-price');
    const mainImageElement = document.getElementById('attraction-main-image');
    const specsContainer = document.getElementById('attraction-specs'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    const thumbnailsContainer = document.getElementById('attraction-thumbnails');
    const addToCartBtn = document.getElementById('add-attraction-to-cart-btn');
    const buyNowBtn = document.getElementById('buy-attraction-now-btn');

    if (titleElement) titleElement.textContent = attraction.title;
    if (descriptionElement) descriptionElement.textContent = attraction.description || '';
    if (priceElement) priceElement.textContent = window.formatPrice ? window.formatPrice(attraction.price) : `${attraction.price}‚ÇΩ`;
    if (mainImageElement) {
        mainImageElement.src = attraction.image;
        mainImageElement.alt = attraction.title;
        mainImageElement.onerror = function() {
            this.onerror = null;
            this.src = '/assets/placeholder.png';
        };
    }

    // –†–µ–Ω–¥–µ—Ä–∏–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    if (specsContainer) {
        specsContainer.innerHTML = `
          <div class="spec-item">
            <span class="spec-label">–ú–µ—Å—Ç:</span> <span class="spec-value">${places}</span>
          </div>
          <div class="spec-item">
            <span class="spec-label">–ú–æ—â–Ω–æ—Å—Ç—å:</span> <span class="spec-value">${power}</span>
          </div>
          <div class="spec-item">
            <span class="spec-label">–ò–≥—Ä—ã:</span> <span class="spec-value">${games}</span>
          </div>
          <div class="spec-item">
            <span class="spec-label">–ü–ª–æ—â–∞–¥—å:</span> <span class="spec-value">${area}</span>
          </div>
          <div class="spec-item">
            <span class="spec-label">–†–∞–∑–º–µ—Ä—ã:</span> <span class="spec-value">${dimensions}</span>
          </div>
        `;
    }

    // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –º–∏–Ω–∏–∞—Ç—é—Ä - –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if (thumbnailsContainer) {
        thumbnailsContainer.innerHTML = '';
        const thumb = document.createElement('img');
        thumb.src = attraction.image;
        thumb.alt = `–ú–∏–Ω–∏–∞—Ç—é—Ä–∞ ${attraction.title}`;
        thumb.className = 'thumbnail active';
        thumb.onerror = function() {
            this.onerror = null;
            this.src = '/assets/placeholder.png';
        };
        thumb.addEventListener('click', () => {
             if(mainImageElement) {
                 mainImageElement.src = attraction.image;
                 document.querySelectorAll('#attraction-thumbnails .thumbnail').forEach(t => t.classList.remove('active'));
                 thumb.classList.add('active');
             }
        });
        thumbnailsContainer.appendChild(thumb);
    }

    if (addToCartBtn) {
        addToCartBtn.dataset.id = attraction.id;
        addToCartBtn.onclick = () => {
            if (window.addToCart) {
                window.addToCart(attraction);
            }
            if (window.updateCartCount) {
                window.updateCartCount();
            }
             closeModals();
        };
    }

    if (buyNowBtn) {
        buyNowBtn.dataset.id = attraction.id;
        buyNowBtn.onclick = () => {
            if (window.addToCart) {
                window.addToCart(attraction);
            }
            if (window.updateCartCount) {
                window.updateCartCount();
            }
            closeModals();
            if (cartBtn) cartBtn.click();
        };
    }

    if (attractionModal) {
        attractionModal.classList.add('open');
        attractionModal.setAttribute('aria-hidden', 'false');
    }
  }

  function closeModals() {
    const openModal = document.querySelector('.modal.open');
    if (openModal) openModal.classList.remove('open');

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞
    const scrollY = document.body.getAttribute('data-scroll-position');
    document.body.classList.remove('modal-open');
    document.body.style.removeProperty('--scrollbar-width');
    document.body.style.removeProperty('top');
    if (scrollY) {
      window.scrollTo(0, parseInt(scrollY));
      document.body.removeAttribute('data-scroll-position');
    }
  }

  // --- Event Listeners ---
  function setupEventListeners() {
    // –ü–æ–∏—Å–∫
    if (searchInput) {
      let searchTimeout;
      searchInput.addEventListener('input', () => {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(renderAttractions, 300); // Debounce
      });
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    if (categoryButtons.length > 0) {
      categoryButtons.forEach(btn => {
        btn.addEventListener('click', (e) => {
          categoryButtons.forEach(b => b.classList.remove('active'));
          e.target.classList.add('active');
          currentCategory = e.target.dataset.category || '–≤—Å–µ';
          renderAttractions();
        });
      });
    }

    // –ö–Ω–æ–ø–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
    if (cartBtn) {
        cartBtn.addEventListener('click', () => {
             const scrollY = window.scrollY || window.pageYOffset;
             document.body.setAttribute('data-scroll-position', scrollY);
             document.body.classList.add('modal-open');
             const scrollbarWidth = window.getScrollbarWidth ? window.getScrollbarWidth() : 0;
             document.body.style.setProperty('--scrollbar-width', scrollbarWidth + 'px');
             document.body.style.top = `-${scrollY}px`;

             // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –∫–æ—Ä–∑–∏–Ω—ã
             if (window.openCartModal) {
                 window.openCartModal();
             } else if(cartModal) {
                 cartModal.classList.add('open');
                 cartModal.setAttribute('aria-hidden', 'false');
             } else {
                 console.warn('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è openCartModal –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç cartModal');
             }
        });
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–æ–∫
    document.querySelectorAll('[data-close]').forEach(btn => {
      btn.addEventListener('click', closeModals);
    });

    document.querySelectorAll('.modal').forEach(modal => {
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                closeModals();
            }
        });
    });
  }

})();